{
  "version": 3,
  "file": "winnie_2.0.css",
  "sources": [
    "..\\src\\App.html",
    "..\\src\\Map.html",
    "..\\src\\Share.html",
    "..\\src\\TreeView.html",
    "..\\src\\LineNode.html",
    "..\\src\\LegendIconCell.html"
  ],
  "sourcesContent": [
    "{#if urlParams.edit}\n<div class=\"editor-sidebarContainer editor_sidebarExpanded\">\n\t<div class=\"sidebarPanel\">\n\t\t<div class=\"sidebarPanel-toolbarContainer\">\n\t\t\t<div class=\"dropdownMenuWidget\">\n{#each dropdownMenu as it}\n\t\t\t\t<div class=\"dropdownMenuWidget-item{it.checked ? ' checked' : ''}\" on:click=\"checkMe(it, this)\">\n\t\t\t\t\t<i class=\"icon-{it.name}\"></i>\n\t\t\t\t\t<span>{it.title}</span>\n\t\t\t\t</div>\n{/each}\n\t\t\t</div>\n\t\t</div>\n\t\t\t<div id=\"editor\" class=\"editor\"></div>\n\t</div>\n</div>\n{/if}\n<div class=\"editor-viewerContainer editor_sidebarExpanded\">\n\t<Map permalink={permalink} bind:map bind:urlParams />\n</div>\n{#if share}\n<Share conf={conf} />\n{/if}\n\n{#if permalink && permalink.app && permalink.app.gmxTimeline}\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display:none\">\n  <defs>\n  \n      <clippath id=\"clip-path\"><rect x=\"0\" y=\"0\" width=\"13\" height=\"13\"/></clippath>\n  </defs>\n    <symbol id=\"timeline-icon\" viewbox=\"0 0 13 13\">\n      <title>gmxTimeline</title>\n\t<path d=\"M6.5,0C2.9,0,0,2.9,0,6.5S2.9,13,6.5,13S13,10.1,13,6.5S10.1,0,6.5,0z M9.8,7.3H5.7V3.3h1.6v2.4h2.4V7.3z\"/>\n    </symbol>\n</svg>\n{/if}\n\n\n<script>\n\tconst serverBase = window.serverBase || '//maps.kosmosnimki.ru/',\n\t\tchkPar = (key, h1, h2, zn) => h1[key] || (key in h2 ? h2[key] : zn || true);\n\n\timport Map from './Map.html';\n\timport Share from './Share.html';\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tshare: false,\n\t\t\t\tconf: '',\n\t\t\t\turlParams: {},\n\t\t\t\tdropdownMenu: [\n\t\t\t\t\t{ name: 'refresh', title: 'Refresh' },\n\t\t\t\t\t{ name: 'link', title: 'Share', checked: false }\n\t\t\t\t],\n\t\t\t\tmap: null,\n\t\t\t\tpermalink: null\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tcheckMe(it, node) {\n\t\t\t\tlet cmd = it.name,\n\t\t\t\t\tjson = this.editor.getValue(),\n\t\t\t\t\tout = null;\n\t\t\t\ttry {\n\t\t\t\t\tout = JSON.parse(json);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlet error = this.editor.getSession().getAnnotations()[0];\n\t\t\t\t\talert('Ошибка в конфигурации:\\n строка: ' + error.row + '\\n позиция: ' + error.column + '\\n сообщение: ' + error.text);\n\t\t\t\t\tconsole.log('error in json: ' , error);\n\t\t\t\t}\n\t\t\t\tif (out) {\n\t\t\t\t\tif (cmd === 'refresh') {\n\t\t\t\t\t\tthis.set({permalink: out});\n\t\t\t\t\t} else if (cmd === 'link') {\n\t\t\t\t\t\tlet {share} = this.get();\n\t\t\t\t\t\tif (share) {\n\t\t\t\t\t\t\tnode.classList.remove('checked');\n\t\t\t\t\t\t\tthis.set({share: false});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.classList.add('checked');\n\t\t\t\t\t\t\tfetch(serverBase + 'TinyReference/Create.ashx', {\n\t\t\t\t\t\t\t\tmethod: 'post',\n\t\t\t\t\t\t\t\theaders: {'Content-type': 'application/x-www-form-urlencoded'},\n\t\t\t\t\t\t\t\tbody: L.gmxUtil.getFormData({WrapStyle: 'None', content: out}),\n\t\t\t\t\t\t\t\tmode: 'cors',\n\t\t\t\t\t\t\t\tcredentials: 'include'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t\t\t.then(json => {\n\t\t\t\t\t\t\t\tif (json.Status === 'ok') {\n\t\t\t\t\t\t\t\t\tthis.set({share: true, conf:json.Result});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(console.error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tcheckPermalink(out) {\n\t\t\t\tlet {urlParams} = this.get();\n\t\t\t\t// console.log('?config=7ZSC4  dddddddd', out, urlParams)\n\t\t\t\tif (out.app) {\n\t\t\t\t\tout.app.apiKey = chkPar('apiKey', urlParams, out.apiKey, '');\t\t// apiKey\n\t\t\t\t\tout.app.theme = chkPar('theme', urlParams, out.app, 'dark');\t\t// тема по умолчанию\n\t\t\t\t\tout.app.iconSidebar = chkPar('iconSidebar', urlParams, out.app);\t// iconSidebar по умолчанию\n\t\t\t\t\tout.app.treeView = chkPar('treeView', urlParams, out.app);\t\t\t// treeView по умолчанию\n\t\t\t\t\tout.app.iconLayers = chkPar('iconLayers', urlParams, out.app);\t\t// iconLayers по умолчанию\n\t\t\t\t\tout.app.drawing = chkPar('drawing', urlParams, out.app);\t\t\t// drawing по умолчанию\n\t\t\t\t\t//out.app.gmxTimeline = chkPar('gmxTimeline', urlParams, out.app);\t// gmxTimeline по умолчанию\n\t\t\t\t\tout.app.gmxTimeline = urlParams.gmxTimeline === 'true' || out.app.gmxTimeline || false;\t// gmxTimeline по умолчанию false\n\t\t\t\t\tout.app.GWWFPlugin = urlParams.GWWFPlugin === 'true' || out.app.GWWFPlugin || false;\t// GWWFPlugin по умолчанию false\n\t\t\t\t}\n\t\t\t\tlet plugins = out.plugins || {};\n\t\t\t\tif (out.app.GWWFPlugin && !plugins.GWWFPlugin) {\n\t\t\t\t\tplugins.GWWFPlugin = {\n\t\t\t\t\t  \"pluginName\": \"WWF Plugin new\",\n\t\t\t\t\t  \"file\": \"//maps.kosmosnimki.ru/api/plugins/external/GMXPluginWWF/gmxPluginWWF.js\",\n\t\t\t\t\t  \"module\": \"GWWFPlugin\",\n\t\t\t\t\t  \"mapPlugin\": true,\n\t\t\t\t\t  \"isPublic\": true\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (plugins.GWWFPlugin) {\n\t\t\t\t\tL.gmxUtil.requestLink(plugins.GWWFPlugin.file.replace(/\\.js$/, '\\.css'));\n\t\t\t\t\tL.gmxUtil.requestLink(plugins.GWWFPlugin.file, {\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\tout.plugins = plugins;\n\t\t\t\t\t\tthis.set({permalink: out});\n\t\t\t\t\t}).catch(console.warn);\n\t\t\t\t// } else {\n\t\t\t\t\t// this.set({permalink: out});\n\t\t\t\t}\n\n\t\t\t\t//this.set({permalink: out});\n\t\t\t\t// this.set({permalink: out, confStr: JSON.stringify(out, null, 2)});\n\t\t\t\tif (urlParams.edit) {\n\t\t\t\t\tL.gmxUtil.requestLink('//cdnjs.cloudflare.com/ajax/libs/ace/1.4.1/ace.js', {\n\t\t\t\t\t\t// integrity: 'sha256-kCykSp9wgrszaIBZpbagWbvnsHKXo4noDEi6ra6Y43w=',\n\t\t\t\t\t\t// crossorigin: 'anonymous'\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\tvar editor = ace.edit(\"editor\");\n\t\t\t\t\t\teditor.setTheme(\"ace/theme/monokai\");\n\t\t\t\t\t\t// editor.session.setMode(\"ace/mode/json\");\n\t\t\t\t\t\teditor.getSession().setMode(\"ace/mode/json\");\n\n // editor.setOptions({\n    // mode: \"ace/mode/json\",\n    // theme: \"ace/theme/monokai\",\n    // fontSize: \"10pt\",\n    // showPrintMargin : false,\n    // enableBasicAutocompletion: true,\n    // enableSnippets: true,\n    // enableLiveAutocompletion: true,\n    // wrap: true,\n    // scrollPastEnd: true,\n    // displayIndentGuides: true,\n  // });\n\t\t\t\t\t\t// editor.session.setMode(\"ace/mode/javascript\");\n\t\t\t\t\t\teditor.container.getElementsByClassName('ace_scrollbar-v')[0].style.width = '4px';\n\t\t\t\t\t\teditor.setValue(JSON.stringify(out, null, 2))\n\t\t\t\t\t\tthis.editor = editor;\n\t\t\t\t\t\t// window.ted = editor;\n\t\t\t\t\t}).catch(console.warn);\n\n\t\t\t\t}\n\t\t\t\tif (out.app.gmxTimeline && out.app.gmxTimeline !== 'false') {\n\t\t\t\t\tL.gmxUtil.requestLink('//maps.kosmosnimki.ru/api/plugins/timeline/2.9.1/timeline.js');\n\t\t\t\t\tL.gmxUtil.requestLink('//maps.kosmosnimki.ru/api/plugins/timeline/2.9.1/timeline.css');\n\t\t\t\t\t// L.gmxUtil.requestLink('L.Control.gmxTimeLine.js');\n\t\t\t\t\tL.gmxUtil.requestLink('//maps.kosmosnimki.ru/api/plugins/external/GMXPluginTimeLine/L.Control.gmxTimeLine.css');\n\n\t\t\t\t\tL.gmxUtil.requestLink('//maps.kosmosnimki.ru/api/plugins/external/GMXPluginTimeLine/L.Control.gmxTimeLine.js', {\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\tout.plugins = plugins;\n\t\t\t\t\t\tthis.set({permalink: out});\n\t\t\t\t\t}).catch(console.warn);\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetPermalink(id) {\n\t\t\t\tlet out = {};\n\t\t\t\tif (id) {\n\t\t\t\t\tfetch(serverBase + 'TinyReference/Get.ashx?WrapStyle=None&id=' + id, {\n\t\t\t\t\t\tmode: 'cors',\n\t\t\t\t\t\tcredentials: 'include'\n\t\t\t\t\t})\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(json => {\n\t\t\t\t\t\tif (json.Status === 'ok') {\n\t\t\t\t\t\t\tout = json.Result ? JSON.parse(json.Result) : {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.checkPermalink(out);\n\t\t\t\t\t});\n\t\t\t\t\t\t// .catch(err => console.log(err));\n\t\t\t\t// } else {\n\t\t\t\t\t// setTimeout(function() {\n\t\t\t\t\t\t// this.checkPermalink(out);\n\t\t\t\t\t// }.bind(this), 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcomponents: {\n\t\t\tMap,\n\t\t\tShare\n\t\t},\n\n\t\tonstate({ changed, current, previous }) {\n\t\t\t// console.log('in onstate', changed, current, previous);\n\t\t\tif (changed.urlParams) {\n\t\t\t\tlet pars = L.gmxUtil.searchScriptPars('winnie_2.0.js'),\n\t\t\t\t\tconfig = pars ? pars.config : pars._glob,\n\t\t\t\t\tconf = current.urlParams.config || config || 'RSO4E';\n\t\t\t\tthis.getPermalink(conf);\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style>\n#editor {\n\theight: calc(100% - 40px);\n\ttop: 40px;\n}\n\n.sidebarPanel {\n    font-family: 'Roboto';\n\theight: 100%;\n}\n\n.editor-viewerContainer {\n  position: relative;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n  z-index: 5;\n  float: left;\n  width: 100%;\n}\n.editor-sidebarContainer .editor-viewerContainer {\n  left: 500px;\n}\n.editor-sidebarContainer {\n  position: relative;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 0px;\n  overflow: hidden;\n  background: #fff;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  -webkit-transition: width .5s ease;\n  transition: width .5s ease;\n  z-index: 20;\n}\n\n.editor_sidebarExpanded.editor-sidebarContainer {\n  width: 500px;\n}\n\n.hidden {\n\tdisplay: none;\n}\n.dropdownMenuWidget {\n\tdisplay: table;\n}\n.dropdownMenuWidget {\n\theight:100%\n}\n.dropdownMenuWidget-item {\n\tdisplay: table-cell;\n\tvertical-align: middle;\n\tfont-size: 14px;\n\tcursor: pointer;\n\tpadding: 0px 10px;\n\twhite-space: nowrap;\n\tcolor: #424242;\n}\n.checked, .dropdownMenuWidget-item:hover, .dropdownMenuWidget-item.checked {\n\tbackground:rgba(0, 0, 0, 0.05)\n}\n\n.dropdownMenuWidget.right {\n    right: 0px;\n\tpadding: 0;\n    margin: 0;\n    position: absolute;\n    background-color: #ebebeb;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n    height: 26px;\n}\n\n.sidebarPanel-toolbarContainer {\n\tposition:absolute;\n\ttop:0;\n\tleft:0;\n\tright:0;\n\theight:40px;\n\n\tborder-right:1px solid #f0f0f0;\n\tbackground-color:#ebebeb;\n\tbox-shadow:0 0 10px rgba(0, 0, 0, 0.5);\n\n\tz-index:40\n}\n\n.pointer.title {\n    position: relative;\n    bottom: 4px;\n}\n\n</style>\n",
    "<div id=\"map\"></div>\r\n\r\n<style>\r\n:global(.leaflet-gmx-logo) {\r\n    background-image: url(\"logo.png\");\r\n\tbackground-repeat: no-repeat;\r\n}\r\n:global(.leaflet-gmx-loaderStatus.leaflet-control) {\r\n    top: -123px;\r\n    right: 5px;\r\n    left: unset;\r\n}\r\n:global(.gmxControlPopup table.vectorInfoParams td:first-child) {\r\n    border-right: 1px solid #dddddd;\r\n    border-bottom: 1px solid #dddddd;\r\n    padding: 10px;\r\n}\r\n\r\n:global(.gmxControlPopup table.vectorInfoParams td) {\r\n    border-right: 1px solid #dddddd;\r\n    border-bottom: 1px solid #dddddd;\r\n    padding: 10px;\r\n}\r\n\r\n:global(.gmxControlPopup table.vectorInfoParams td:last-child) {\r\n    border-right: 0px solid #dddddd;\r\n    border-bottom: 1px solid #dddddd;\r\n    padding: 10px;\r\n}\r\n:global(.gmxControlPopup table.vectorInfoParams td.key) {\r\n    font-weight: bold;\r\n\twidth: 160px;\r\n}\r\n\r\n:global(.gmxControlPopup table.vectorInfoParams tr:last-child) {\r\n    \r\n    margin-bottom: -2px;\r\n}\r\n\r\n:global(.dark .gmxControlPopup) {\r\n\tmargin: 13px 19px;\r\n    line-height: 1.4;\r\n}\r\n:global(.wwf-slider-container.leaflet-control) {\r\n    margin-right: 48px;\r\n    margin-bottom: 11px;\r\n}\r\n\r\n:global(.gmxControlPopup.leaflet-control) {\r\n    min-width: 423px;\r\n    background: #FFFFFF;\r\n    border: 1px solid #D8E1E8;\r\n    box-sizing: border-box;\r\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.11);\r\n    border-radius: 4px;\r\n    font-family: 'IBM Plex Sans', sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n    word-break: break-word;\r\n}\r\n\r\n:global(.gmxControlPopup div.content-wrapper) {\r\n    margin: 0;\r\n    margin-top: 40px;\r\n    padding: 0;\r\n    text-align: left;\r\n    cursor: default;\r\n}\r\n\r\n:global(.gmxControlPopup div.content-wrapper div.content) {\r\n\tmargin-top: 0px;\r\n}\r\n\r\n:global(.gmxControlPopup div.content-wrapper div.content table) {\r\n\tmargin-top: -12px;\r\n}\r\n\r\n:global(.gmxControlPopup .title) {\r\n\tdisplay: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    position: absolute;\r\n    padding-left: 12px;\r\n    top: 0;\r\n    width: 100%;\r\n    pointer-events: none;\r\n    height: 30px;\r\n    background: #F3F7FA;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 13px;\r\n    line-height: normal;\r\n    color: #394B59;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n/*\r\n:global(.table_pop) {\r\n    display: block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background: #F3F7FA;\r\n    border-bottom: 1px solid #dddddd;\r\n    border-top: 1px solid #dddddd;\r\n}\r\n*/\r\n:global(.gmxControlPopup .closeButton) {\r\n    position: absolute;\r\n    font: 16px/14px Tahoma, Verdana, sans-serif;\r\n    font-weight: normal;\r\n    color: #333;\r\n    top: 7px;\r\n    right: 10px;\r\n    cursor: pointer;\r\n    z-index: 1;\r\n}\r\n:global(.search-options-period) {\r\n    position: absolute;\r\n    z-index: 6;\r\n    right: 10px;\r\n    top: 82px;\r\n    background-color: #FCFCFE;\r\n    padding: 8px;\r\n    border-radius: 1px;\r\n}\r\n:global(input.datepicker) {\r\n    width: 77px;\r\n    border: none;\r\n    background: lightyellow;\r\n    padding: 4px;\r\n    text-align: center;\r\n    position: relative;\r\n    top: 4px;\r\n}\r\n:global(.search-options-period .info) {\r\n    font-family: 'Roboto', Tahoma, Arial, sans-serif;\r\n    font-size: 11px;\r\n\tdisplay: inline-block;\r\n}\r\n\r\n</style>\r\n\r\n<script>\r\n\timport TreeView from './TreeView.html';\r\n\t// import DateWidget from './DateWidget.html';\r\n\r\n\timport './global.css';\r\n\timport './iconLayersDark.css';\r\n\r\n\timport SidebarControl from  'scanex-leaflet-sidebar';\r\n\timport 'scanex-leaflet-sidebar/dist/scanex-leaflet-sidebar.css';\r\n\r\n\timport IconLayers from 'leaflet-iconlayers';\r\n\timport 'leaflet-iconlayers/dist/iconLayers.css';\r\n\t\r\n\r\n\tconst serverBase = window.serverBase || '//maps.kosmosnimki.ru/';\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tlayersTree: {\r\n\t\t\t\t\tskiped: {},\r\n\t\t\t\t\toptions: {},\r\n\t\t\t\t\tvisible: {},\r\n\t\t\t\t\texpanded: {}\r\n\t\t\t\t},\r\n\t\t\t\turlParams: null,\r\n\t\t\t\tpermalink: null,\r\n\t\t\t\tmap: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tcreateMap(it) {\r\n\t\t\t\tlet {layersTree, urlParams} = this.get();\r\n\t\t\t\tlet app = it.app || {},\r\n\t\t\t\t\tgmxMap = app.gmxMap || {},\r\n\t\t\t\t\tstate = it.state || {},\r\n\t\t\t\t\t// layersTree = state.layersTree || {},\r\n\t\t\t\t\tcalendar = state.calendar || {},\r\n\t\t\t\t\tmapID = gmxMap.mapID || '946GH',\r\n\t\t\t\t\tapiKey = app.apiKey || gmxMap.apiKey || 'Z2SSNR87N4',\r\n\t\t\t\t\tstateMap = state.map || {},\r\n\t\t\t\t\tpos = stateMap.position || {},\r\n\t\t\t\t\tminZoom = stateMap.minZoom || 1,\r\n\t\t\t\t\tmaxZoom = stateMap.maxZoom || 21;\r\n\r\n\t\t\t\t// console.log('createMap', it)\r\n\t\t\t\tfor (let key in pos) {\r\n\t\t\t\t\tif(urlParams[key]) { pos[key] = urlParams[key]; }\r\n\t\t\t\t}\r\n\t\t\t\tif(app.theme) {\r\n\t\t\t\t\tdocument.body.classList.add(app.theme);\r\n\t\t\t\t}\r\n\t\t\t\tif(navigator.platform.match('Mac') !== null) {\r\n\t\t\t\t\tdocument.body.classList.add('OSX');\r\n\t\t\t\t}\r\n\t\t\t\tif(L.leafletMap) {\r\n\t\t\t\t\tL.leafletMap.remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlayersTree = state.layersTree || layersTree;\r\n\t\t\t\tlayersTree.options = layersTree.options || {};\r\n\t\t\t\tlayersTree.skiped = layersTree.skiped || {};\r\n\t\t\t\tthis.layersTree = layersTree;\r\n\t\t\t\tlet map = new L.Map('map', {\r\n\t\t\t\t\tsrs: 3857,\r\n\t\t\t\t\tlayers: [],\r\n\t\t\t\t\tcenter: new L.LatLng(pos.y || 0, pos.x || 60),\r\n\t\t\t\t\tzoom: pos.z || 3,\r\n\t\t\t\t\tminZoom: minZoom,\r\n\t\t\t\t\tmaxZoom: maxZoom\r\n\t\t\t\t});\r\n\t\t\t\tL.leafletMap = map;\r\n\t\t\t\tmap._getHref = function() {\r\n\t\t\t\t\tlet center = map.getCenter();\r\n\t\t\t\t\tlet href = `${location.origin}?z=${map.getZoom()}&x=${center.lng}&y=${center.lat}&dt=${picker.getDate().toLocaleDateString()}`;\r\n\t\t\t\t\tif (window.language === 'eng') {\r\n\t\t\t\t\t\thref += '&lang=eng';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn href;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmap.gmxControlsManager.init({\r\n\t\t\t\t\t//gmxDrawing: !app.drawing || app.drawing === 'false' ? null : {position: 'right'},\r\n\t\t\t\t\tgmxDrawing: null,\r\n\t\t\t\t\tgmxZoom: {position: 'gmxbottomright'},\r\n\t\t\t\t\tgmxLoaderStatus: {position: 'gmxbottomright'},\r\n\t\t\t\t\tgmxHide: null\r\n\t\t\t\t});\r\n\t\t\t\tmap.gmxControlsManager.setSvgSprites('//www.kosmosnimki.ru/lib/geomixer_1.3/img/svg-symbols.svg');\r\n\t\t\t\tvar permalinkIcon = L.control.gmxIcon({\r\n\t\t\t\t\t\tid: 'permalink',\r\n\t\t\t\t\t\ttitle: window.language === 'eng' ? 'Link to map' : 'Ссылка на карту',\r\n\t\t\t\t\t\tposition: 'right'\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.addTo(map)\r\n\t\t\t\t\t.on('click', ev => {\r\n\t\t\t\t\t\tlet href = map._getHref();\r\n\t\t\t\t\t\tif (navigator.clipboard && navigator.clipboard.writeText) {\r\n\t\t\t\t\t\t\tnavigator.clipboard.writeText(href);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlocation.href = href;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tlet day = 1000*60*60*24;\r\n\t\t\t\tlet currentDate = new Date();\r\n\t\t\t\tlet dtDate = currentDate;\r\n\t\t\t\tif(urlParams.dt) {\r\n\t\t\t\t\tdtDate = new Date(urlParams.dt.split('.').reverse());\r\n\t\t\t\t\tcalendar.dateBegin = dtDate.getTime();\r\n\t\t\t\t\tcalendar.dateEnd = calendar.dateBegin + day;\r\n\t\t\t\t}\r\n\t\t\t\tlet currentDateStr = currentDate.toLocaleDateString(),\r\n\t\t\t\t\t_this = this,\r\n\t\t\t\t\tdCont = document.getElementsByClassName('search-options-period')[0],\r\n\t\t\t\t\tprev = dCont.getElementsByClassName('pika-prev')[0],\r\n\t\t\t\t\tnext = dCont.getElementsByClassName('pika-next')[0],\r\n\t\t\t\t\tinfo = dCont.getElementsByClassName('info')[0],\r\n\t\t\t\t\tfield = dCont.getElementsByClassName('datepicker')[0];\r\n\r\n\t\t\t\tlet optp = {\r\n\t\t\t\t\tfield: field,\r\n\t\t\t\t\tonSelect: function(date) {\r\n\t\t\t\t\t\tvar dStr = date.toLocaleDateString(),\r\n\t\t\t\t\t\t\tdayPast24 = currentDateStr === dStr || date.getTime() > currentDate.getTime(),\r\n\t\t\t\t\t\t\tflagDay = urlParams.flagDay === '1' ? (new Date()).getUTCHours() < 12 : true;\r\n\r\n\t\t\t\t\t\tfield.value = dStr;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar str = 'За 24ч (UTC)';\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (dayPast24) {\r\n\t\t\t\t\t\t\tstr = flagDay ? 'За последние 24+' + currentDate.getUTCHours() + 'ч (UTC)' : 'За последние ' + currentDate.getUTCHours() + 'ч (UTC)';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (window.language === 'eng') {\r\n\t\t\t\t\t\t\tstr = str.replace('За последние', 'Last').replace('За', 'Last').replace('ч', 'h');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tinfo.innerHTML = str;\r\n\t\t\t\t\t\t_this.gmxMap.setDate(date);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tminDate: new Date(currentDate.getTime() - 3*day),\r\n\t\t\t\t};\r\n\t\t\t\tif (window.language !== 'eng') {\r\n\t\t\t\t\toptp.i18n = {\r\n\t\t\t\t\t\tpreviousMonth : 'Предыдущий месяц',\r\n\t\t\t\t\t\tnextMonth     : 'Следующий месяц',\r\n\t\t\t\t\t\tmonths        : ['Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n\t\t\t\t\t\tweekdays      : ['Воскресенье','Понедельник','Вторник','Среда','Четверг','Пятница','Суббота'],\r\n\t\t\t\t\t\tweekdaysShort : ['Вс','Пн','Вт','Ср','Чт','Пт','Сб']\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst picker = new Pikaday(optp);\r\n\t\t\t\tL.DomEvent.on(prev, 'click', function() {\r\n\t\t\t\t\tpicker.setDate(new Date(picker.getDate().getTime() - day));\r\n\t\t\t\t});\r\n\t\t\t\tL.DomEvent.on(next, 'click', function() {\r\n\t\t\t\t\tpicker.setDate(new Date(picker.getDate().getTime() + day));\r\n\t\t\t\t});\r\n\t\t\t\t//map.gmxControlsManager.get('logo').getContainer().setAttribute('href', 'http://scanex.ru');\r\n\t\t\t\t\r\n\t\t\t\tthis.mapID = mapID;\r\n\t\t\t\tlet opt = {\r\n\t\t\t\t\tleafletMap: map,\r\n\t\t\t\t\tapiKey: apiKey,\r\n\t\t\t\t\t// visibleItemOnly: true,\t// TODO: только видимые элементы (слои и папки) баги серверного скрипта\r\n\t\t\t\t\tsetZIndex: true\r\n\t\t\t\t\t// ,\r\n\t\t\t\t\t// visibility: layersTree.visible || {}\r\n\t\t\t\t};\r\n\t\t\t\tlet skipIds = {\r\n\t\t\t\t\t'5D0204D1C4934E5CAE2D72E0F9CF9E67': 'Статистика по регионам (ml)',\r\n\t\t\t\t\t'C8C863EFBEC6498C8AACA932510BD79B': 'Границы заповедников',\r\n\t\t\t\t\t'109DAC5FEB7641B9B7D59DE692A5B867': 'Административно-территориальное деление РФ'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tL.gmx.loadMap(mapID, opt).then(function(gmxMap) {\r\n\t\t\t\t\tthis.gmxMap = gmxMap;\r\n\t\t\t\t\tlet dateInterval = calendar || {},\r\n\t\t\t\t\t\ttb = dateInterval.dateBegin,\r\n\t\t\t\t\t\tte = dateInterval.dateEnd;\r\n\t\t\t\t\tif(!tb) {\r\n\t\t\t\t\t\tlet day = 1000*60*60*24,\r\n\t\t\t\t\t\t\tcd = new Date();\r\n\t\t\t\t\t\ttb = Date.UTC(cd.getUTCFullYear(), cd.getUTCMonth(), cd.getUTCDate());\r\n\t\t\t\t\t\tte = tb + day;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet db = new Date(tb), de = new Date(te);\r\n\t\t\t\t\tgmxMap.setDate = function(date) {\r\n\t\t\t\t\t\tvar dStr = date.toLocaleDateString(),\r\n\t\t\t\t\t\t\tdb = date,\r\n\t\t\t\t\t\t\tday = 1000*60*60*24,\r\n\t\t\t\t\t\t\tde = new Date(db.getTime() + day),\r\n\t\t\t\t\t\t\tflagDay = urlParams.flagDay === '1' ? (new Date()).getUTCHours() < 12 : true,\r\n\t\t\t\t\t\t\tdayPast24 = currentDateStr === dStr || date.getTime() > currentDate.getTime(),\r\n\t\t\t\t\t\t\tgmxTimeline = map.gmxControlsManager.get('gmxTimeline');\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (dayPast24 && flagDay) {\r\n\t\t\t\t\t\t\tde = new Date();\r\n\t\t\t\t\t\t\tdb = new Date(date.getTime() - day);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// console.log('дата', urlParams, db, de);\r\n\r\n\t\t\t\t\t\tgmxMap.layers.forEach((it) => {\r\n\t\t\t\t\t\t\tif(it.getGmxProperties) {\r\n\t\t\t\t\t\t\t\tlet props = it.getGmxProperties(),\r\n\t\t\t\t\t\t\t\t\tid = props.name,\r\n\t\t\t\t\t\t\t\t\ttimeLineFlag = gmxTimeline && gmxTimeline.getLayerState(id);\r\n\t\t\t\t\t\t\t\tif (window.language === 'eng' && skipIds[id]) {\r\n\t\t\t\t\t\t\t\t\tmap.removeLayer(it);\r\n\t\t\t\t\t\t\t\t\tlayersTree.skiped[id] = true;\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tdelete layersTree.skiped[id];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (!timeLineFlag) {\r\n\t\t\t\t\t\t\t\t\tif (it.setDateInterval) {\r\n\t\t\t\t\t\t\t\t\t\tit.setDateInterval(db, de);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (id in layersTree.visible) {\r\n\t\t\t\t\t\t\t\t\t\tmap[layersTree.visible[id] ? 'addLayer' : 'removeLayer'](it);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar latlngs = [{\"lat\":69.869892,\"lng\":29.443359},{\"lat\":68.784144,\"lng\":27.509766},{\"lat\":60.75916,\"lng\":27.773438},{\"lat\":60.261617,\"lng\":29.267578},{\"lat\":60.141505,\"lng\":30.366211},{\"lat\":59.800634,\"lng\":30.454102},{\"lat\":59.678835,\"lng\":28.894043},{\"lat\":59.288332,\"lng\":27.092285},{\"lat\":56.194481,\"lng\":26.850586},{\"lat\":53.826597,\"lng\":22.763672},{\"lat\":47.989922,\"lng\":22.016602},{\"lat\":41.277806,\"lng\":27.817383},{\"lat\":35.960223,\"lng\":51.635742},{\"lat\":34.849875,\"lng\":118.740234},{\"lat\":35.209722,\"lng\":128.671875},{\"lat\":43.325178,\"lng\":145.151367},{\"lat\":45.706179,\"lng\":152.226563},{\"lat\":54.521081,\"lng\":163.344727},{\"lat\":64.510643,\"lng\":186.987305},{\"lat\":66.089364,\"lng\":185.625},{\"lat\":68.089709,\"lng\":173.847656},{\"lat\":69.702868,\"lng\":155.170898},{\"lat\":70.473553,\"lng\":143.789063},{\"lat\":70.466207,\"lng\":131.704102},{\"lat\":71.978988,\"lng\":124.519043},{\"lat\":72.945431,\"lng\":104.150391},{\"lat\":69.9303,\"lng\":82.265625},{\"lat\":69.1938,\"lng\":74.091797},{\"lat\":68.106102,\"lng\":68.48877},{\"lat\":67.634317,\"lng\":49.921875},{\"lat\":66.661684,\"lng\":47.219238},{\"lat\":66.981666,\"lng\":40.847168},{\"lat\":68.815927,\"lng\":35.947266}];\r\n\t\t\t\t\tvar clip1 = L.polygon(latlngs);\r\n\t\t\t\t\t\r\n\t\t\t\t\tgmxMap.layers.forEach((it) => {\r\n\t\t\t\t\t\tif (it.getGmxProperties) {\r\n\t\t\t\t\t\t\tlet props = it.getGmxProperties();\r\n\t\t\t\t\t\t\tif (props.IsRasterCatalog) {\r\n\t\t\t\t\t\t\t\tit.addClipPolygon(clip1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tL.gmx.gmxMapManager.iterateNode(gmxMap.rawTree, function(node, prnt) {\r\n\t\t\t\t\t\tlet props = node.content.properties,\r\n\t\t\t\t\t\t\tid = props.name || props.GroupID;\r\n\t\t\t\t\t\tif (props.GroupID) {\r\n\t\t\t\t\t\t\tif (props.expanded && !(id in layersTree.expanded)) {\r\n\t\t\t\t\t\t\t\tlayersTree.expanded[id] = props.expanded;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (props.visible && !(id in layersTree.visible)) {\r\n\t\t\t\t\t\t\t\tlayersTree.visible[id] = props.visible;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (props.visible && !(id in layersTree.visible)) {\r\n\t\t\t\t\t\t\t\tlayersTree.visible[id] = props.visible;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet prntProps = prnt.properties;\r\n\t\t\t\t\t\t\tif (prntProps.GroupID && prntProps.list) {\r\n\t\t\t\t\t\t\t\tlet opt = layersTree.options[id] || {};\r\n\t\t\t\t\t\t\t\topt.list = prntProps.list;\r\n\t\t\t\t\t\t\t\tlayersTree.options[id]  = opt;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, {nodes: gmxMap.nodes});\r\n\r\n\t\t\t\t\t// this.set({layersTree: layersTree}); \r\n\t\t\t\t\t// this.set({gmxMap: gmxMap}); \r\n\t\t\t\t\tlet shiftIconLayers = false,\r\n\t\t\t\t\t\tgmxTimelineContainer = null,\r\n\t\t\t\t\t\trepaintTimeline = null;\r\n\r\n\t\t\t\t\tif (app.gmxTimeline && app.gmxTimeline !== 'false') {\r\n\t\t\t\t\t\t/* TimeLine */\r\n\t\t\t\t\t\twindow.nsGmx.gmxTimeLine.afterViewer({gmxMap: gmxMap}, map);\r\n\t\t\t\t\t\tvar control = L.control.gmxTimeline({\r\n\t\t\t\t\t\t\tlocale: window.language === 'eng' ? 'en' : 'ru',\r\n\t\t\t\t\t\t\tmoveable: true\r\n\t\t\t\t\t\t\t}).on('dateInterval', function (ev) {\r\n\t\t\t\t\t\t\t\tgmxMap.layersByID[ev.layerID].setDateInterval(ev.beginDate, ev.endDate);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.on('statechanged', function () {\r\n\t\t\t\t\t\t\t\trepaintTimeline();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.on('click', function (ev) {\r\n\t\t\t\t\t\t\t\tgmxMap.layersByID[ev.layerID].repaint();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.gmxTimeline = control;\r\n\t\t\t\t\t\trepaintTimeline = () => {\r\n\t\t\t\t\t\t\tif (control._container) {\r\n\t\t\t\t\t\t\t\tcontrol._container.classList[shiftIconLayers ? 'add' : 'remove']('shiftTimeline');\r\n\t\t\t\t\t\t\t\tcontrol._redrawTimeline();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tmap\r\n\t\t\t\t\t\t\t.on('layerremove', function (ev) {\r\n\t\t\t\t\t\t\t\tlet layer = ev.layer,\r\n\t\t\t\t\t\t\t\t\tprops = layer && layer.getGmxProperties && layer.getGmxProperties();\r\n\t\t\t\t\t\t\t\tif (props && props.name) {\r\n\t\t\t\t\t\t\t\t\tlayersTree.visible[props.name] = false;\r\n\t\t\t\t\t\t\t\t\tif (this._treeView) {\r\n\t\t\t\t\t\t\t\t\t\tthis._treeView.set({layersTree: layersTree}); \r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this)\r\n\t\t\t\t\t\t\t.on('layeradd', function (ev) {\r\n\t\t\t\t\t\t\t\tlet layer = ev.layer,\r\n\t\t\t\t\t\t\t\t\tprops = layer && layer.getGmxProperties && layer.getGmxProperties();\r\n\t\t\t\t\t\t\t\tif (props && props.name) {\r\n\t\t\t\t\t\t\t\t\tlayersTree.visible[props.name] = true;\r\n\t\t\t\t\t\t\t\t\tif (this._treeView) {\r\n\t\t\t\t\t\t\t\t\t\tthis._treeView.set({layersTree: layersTree}); \r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tif (picker) {\r\n\t\t\t\t\t\t\tpicker.setDate(dtDate);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgmxMap.setDate(db);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (app.iconSidebar && app.iconSidebar !== 'false') {\r\n\t\t\t\t\t\tvar iconSidebar = new SidebarControl({position: 'topleft', className: 'sidebarControl'});\r\n\t\t\t\t\t\ticonSidebar.addTo(map);\r\n\t\t\t\t\t\ticonSidebar.getContainer().classList.add('sidebarControl');\r\n\r\n\t\t\t\t\t\tthis.iconSidebar = iconSidebar;\r\n\t\t\t\t\t\tif (app.treeView && app.treeView !== 'false') {\r\n\t\t\t\t\t\t\tvar treePane = iconSidebar.addTab({id: 'treeView', icon: 'icon-layers', opened: 'opened', closed: 'closed'});\r\n\t\t\t\t\t\t\tthis._initTree({container: treePane, layersTree: layersTree, rawTree: gmxMap.rawTree, gmxTimeline: this.gmxTimeline});\r\n\t\t\t\t\t\t\tthis.treePane = treePane;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdocument.body.classList.add('noIconSidebar');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet bLayersConf = state.baseLayersManager || { activeIDs: gmxMap.properties.BaseLayers };\r\n\t\t\t\t\tthis._initBaseLayers(map, bLayersConf, app);\r\n\t\t\t\t}.bind(this))\r\n\t\t\t\t.catch(console.log);\r\n\t\t\t\tthis.set({map: map, config: it});\r\n\t\t\t},\r\n\t\t\t_initBaseLayers(map, baseLayers, app) {\r\n\t\t\t\tconst lang = window.language || 'rus';\r\n\t\t\t\tif (lang === 'eng') {\r\n\t\t\t\t\tbaseLayers.currentID = 'OSM_old';\r\n\t\t\t\t\tbaseLayers.activeIDs = ['OSM_old'];\r\n\t\t\t\t}\r\n\t\t\t\tlet blm = map.gmxBaseLayersManager,\r\n\t\t\t\t\tactiveIDs = baseLayers.activeIDs || ['sputnik'],\r\n\t\t\t\t\tcurrentID = baseLayers.currentID || activeIDs[0];\r\n\t\t\t\tblm.initDefaults().then(function() {\r\n\t\t\t\t\tblm.setActiveIDs(activeIDs);\r\n\t\t\t\t\tlet layers = blm.getActiveIDs().map(id => {\r\n\t\t\t\t\t\tvar layer = blm.get(id);\r\n\t\t\t\t\t\tif (!layer) {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tlayer: layer,\r\n\t\t\t\t\t\t\t\ticon: layer.options.icon,\r\n\t\t\t\t\t\t\t\ttitle: layer.options[lang]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).filter(e => e);\r\n\r\n\t\t\t\t\tif (app.iconLayers && app.iconLayers !== 'false') {\r\n\t\t\t\t\t\tlet baseLayersControl = new IconLayers(layers, {id: 'iconLayers'});\r\n\t\t\t\t\t\tmap.gmxControlsManager.add(baseLayersControl);\r\n\t\t\t\t\t\tmap.addControl(baseLayersControl);\r\n\t\t\t\t\t\tbaseLayersControl.setActiveLayer(blm.get(currentID));\r\n\t\t\t\t\t\tthis.IconLayersContainer = baseLayersControl.getContainer();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tblm.setCurrentID(currentID);\r\n\t\t\t\t\tif (app.treeView === 'opened' && this.iconSidebar) { this.iconSidebar.setCurrent('treeView'); }\r\n\t\t\t\t}.bind(this));\r\n\t\t\t},\r\n\t\t\t_getNodeIndex(target) {\r\n\t\t\t\tlet arr = target.parentNode.children,\r\n\t\t\t\t\ti, len;\r\n\t\t\t\tfor(i = 0, len = arr.length; i < len; i++) {\r\n\t\t\t\t\tif (arr[i] === target) break;\r\n\t\t\t\t}\r\n\t\t\t\treturn i === len ? null : i;\r\n\t\t\t},\r\n\r\n\t\t\t_initTree(it) {\r\n\t\t\t\tlet rawTree = {\r\n\t\t\t\t\ttype: 'map',\r\n\t\t\t\t\tcontent: it.rawTree\r\n\t\t\t\t};\r\n\t\t\t\tthis._treeView = new TreeView({\r\n\t\t\t\t\tappendNode: (id) => {\t// TODO: только видимые элементы (слои и папки) баги серверного скрипта\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\tif (this.gmxMap.nodes) {\r\n\t\t\t\t\t\t\tlet {map} = this.get();\r\n\t\t\t\t\t\t\tlet mapID = this.mapID,\r\n\t\t\t\t\t\t\t\tlayersTree = this.layersTree,\r\n\t\t\t\t\t\t\t\tvisible = layersTree.visible || {},\r\n\t\t\t\t\t\t\t\t// mapItem = L.gmx._maps['maps.kosmosnimki.ru'][mapID],\r\n\t\t\t\t\t\t\t\tgmxMap = this.gmxMap,\r\n\t\t\t\t\t\t\t\tlayersByID = gmxMap.layersByID;\r\n\t\t\t\t\t\t\tL.gmx.gmxMapManager.getMapFolder({\r\n\t\t\t\t\t\t\t\ttreeConfig: layersTree,\r\n\t\t\t\t\t\t\t\tmapId: mapID,\r\n\t\t\t\t\t\t\t\tfolderId: id\r\n\t\t\t\t\t\t\t}).then(function(json) {\r\n\t\t\t\t\t\t\t\tL.gmx.gmxMapManager.iterateNode(json.content, function(node) {\r\n\t\t\t\t\t\t\t\t\tlet props = node.content.properties,\r\n\t\t\t\t\t\t\t\t\t\tlayerId = props.name;\r\n\t\t\t\t\t\t\t\t\tif (layerId && layerId in visible && visible[layerId] !== props.visible) {\r\n\t\t\t\t\t\t\t\t\t\tprops.visible = visible[layerId];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, {nodes: gmxMap.nodes});\r\n\t\t\t\t\t\t\t\tgmxMap.addLayersToMap(map);\r\n\t\t\t\t\t\t\t\tthis.treePane.innerHTML = '';\r\n\t\t\t\t\t\t\t\tthis._initTree({\r\n\t\t\t\t\t\t\t\t\tcontainer: this.treePane,\r\n\t\t\t\t\t\t\t\t\tlayersTree: this.layersTree,\r\n\t\t\t\t\t\t\t\t\trawTree: gmxMap.rawTree\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttarget: it.container,\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tcontainer: it.container,\r\n\t\t\t\t\t\tlayersTree: it.layersTree,\r\n\t\t\t\t\t\tgmxTimeline: it.gmxTimeline ? true : false,\r\n\t\t\t\t\t\trawTree: rawTree\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._treeView.on('command', (ev) => {\r\n\t\t\t\t\tlet {map} = this.get();\r\n\t\t\t\t\tlet cmd = ev.cmd,\r\n\t\t\t\t\t\ttarget = ev.originalEvent ? ev.originalEvent.target : null,\r\n\t\t\t\t\t\tlayersTree = this.layersTree,\r\n\t\t\t\t\t\tgmxMap = this.gmxMap,\r\n\t\t\t\t\t\tnode = gmxMap.nodes ? gmxMap.nodes[ev.id] : true,\r\n\t\t\t\t\t\tgmxLayer = gmxMap.layersByID[ev.id];\r\n\r\n\t\t\t\t\t// console.log('Map command', ev, this.layersTree);\r\n\t\t\t\t\tif (gmxLayer && !(gmxLayer instanceof L.gmx.DummyLayer)) {\r\n\t\t\t\t\t\tif (cmd === 'fitBounds') {\r\n\t\t\t\t\t\t\tif (gmxLayer.getBounds) {\r\n\t\t\t\t\t\t\t\tlet bounds = gmxLayer.getBounds();\r\n\t\t\t\t\t\t\t\tmap.fitBounds(bounds, {\t// maxZoom от М.Потанина\r\n\t\t\t\t\t\t\t\t\tanimation: false,\r\n\t\t\t\t\t\t\t\t\tmaxZoom: Math.min(Math.max(15, map.getZoom()), map.getBoundsZoom(bounds))\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (cmd === 'showInfo') {\r\n\t\t\t\t\t\t\tlet props = gmxLayer.getGmxProperties(),\r\n\t\t\t\t\t\t\t\tmeta = props.MetaProperties,\r\n\t\t\t\t\t\t\t\tgetContent = () => {\r\n\t\t\t\t\t\t\t\t\tlet str = '<div class=\"title\">' + props.title + '</div>';\r\n\t\t\t\t\t\t\t\t\tif (meta.desc_long) {\r\n\t\t\t\t\t\t\t\t\t\treturn str + meta.desc_long.Value;\r\n\t\t\t\t\t\t\t\t\t} else if (Object.keys(meta).length) {\r\n\t\t\t\t\t\t\t\t\t\tlet arr = [];\r\n\t\t\t\t\t\t\t\t\t\tfor(let key in meta) {\r\n\t\t\t\t\t\t\t\t\t\t\tarr.push('<tr><td class=\"key\"><span>' + key + '</span></td><td><div>' + meta[key].Value + '</div></td></tr>');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treturn str + '<table class=\"vectorInfoParams\"><tbody>' + arr.join('') + '</tbody></table>';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tdesc = getContent();\r\n\r\n\t\t\t\t\t\t\tif (desc) {\r\n\t\t\t\t\t\t\t\tlet gmxPopup = L.control.gmxPopup({content: desc}).openOn(map),\r\n\t\t\t\t\t\t\t\t\tcont = gmxPopup.getContainer(),\r\n\t\t\t\t\t\t\t\t\tp = L.DomUtil.getPosition(cont);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tL.DomUtil.setPosition(cont, {x: Math.floor(p.x), y: Math.floor(p.y)});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (cmd === 'toggleNode') {\r\n\t\t\t\t\t\t\tlet flag = ev.set;\r\n\t\t\t\t\t\t\tif (flag) {\r\n\t\t\t\t\t\t\t\tif (!gmxLayer._map) {\r\n\t\t\t\t\t\t\t\t\tmap.addLayer(gmxLayer);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (gmxLayer._map) {\r\n\t\t\t\t\t\t\t\t\tmap.removeLayer(gmxLayer);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (cmd === 'toggleVisibility') {\r\n\t\t\t\t\t\t\tif (gmxLayer._map) {\r\n\t\t\t\t\t\t\t\tmap.removeLayer(gmxLayer);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmap.addLayer(gmxLayer);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (cmd === 'toggleTimeline' && this.gmxTimeline) {\r\n\t\t\t\t\t\t\tif (target.classList.contains('enabled')) {\r\n\t\t\t\t\t\t\t\tif (!this.gmxTimeline._map) {\r\n\t\t\t\t\t\t\t\t\tmap.addControl(this.gmxTimeline);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.gmxTimeline.addLayer(gmxLayer);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.gmxTimeline.removeLayer(gmxLayer);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (cmd === 'toggleStyle') {\r\n\t\t\t\t\t\t\tlet num = this._getNodeIndex(target.parentNode),\r\n\t\t\t\t\t\t\t\tstyles = gmxLayer.getStyles();\r\n\t\t\t\t\t\t\tif (target.classList.contains('enabled')) {\r\n\t\t\t\t\t\t\t\ttarget.classList.remove('enabled');\r\n\t\t\t\t\t\t\t\tstyles[num].disabled = true;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\ttarget.classList.add('enabled');\r\n\t\t\t\t\t\t\t\tdelete styles[num].disabled;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tgmxLayer.setStyles(styles);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (cmd === 'toggleVisibility' && !node) {\r\n\t\t\t\t\t\t\tthis._treeView.appendNode(ev.id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tonstate({ changed, current, previous }) {\r\n\t\t\tif (changed.permalink && current.permalink) {\r\n\t\t\t\tthis.createMap(current.permalink);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n",
    "<div class=\"share\">\n\t<div class=\"arrow\"></div>\n\t{#if title}<h3 class=\"popover-title\">{title}</h3>{/if}\n\t<div class=\"popover-content\">\n\t\t<div class=\"shareDialogContainer\">\n\t\t\t<div class=\"shareDialog\">\n\t\t\t\t<div class=\"shareDialog-row shareDialog-title\">\n\t\t\t\t\t<span class=\"bold\">Ссылка на карту:</span>\n\t\t\t\t\t<a class=\"gmx-link_icon\" target=\"_blank\" href=\"//www.twitter.com/share?url={link}\"><i class=\"icon-twitter\"></i></a>\n\t\t\t\t\t<a class=\"gmx-link_icon\" target=\"_blank\" href=\"https://www.facebook.com/sharer/sharer.php?u={link}\"><i class=\"icon-facebook\"></i></a>\n\t\t\t\t\t<a class=\"gmx-link_icon\" target=\"_blank\" href=\"//vkontakte.ru/share.php?url{link}\"><i class=\"icon-vk\"></i></a>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"shareDialog-row\">\n\t\t\t\t\t<div class=\"gmx-table\">\n\t\t\t\t\t\t<input class=\"shareDialog-inputPermalinkUrl\" type=\"text\" readonly=\"readonly\" value=\"{link}\">\n\t\t\t\t\t\t<a class=\"gmx-link_icon\" target=\"_blank\" href=\"{link}\"><i class=\"icon-link-ext\" title=\"открыть в новом окне\"></i></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"shareDialog-row bold\">Код для вставки:</div>\n\t\t\t\t<div class=\"shareDialog-row\">\n\t\t\t\t\t<div class=\"gmx-table shareDialog-resolutionTable\">\n\t\t\t\t\t\t\t<input class=\"\" type=\"number\" value=\"{frameWidth}\" on:change=\"set({frameWidth: this.value})\">\n\t\t\t\t\t\t\t<span class=\"shareDialog-resolutionCross\">x</span>\n\t\t\t\t\t\t\t<input class=\"\" type=\"number\" value=\"{frameHeight}\" on:change=\"set({frameHeight: this.value})\">\n\t\t\t\t\t\t<span class=\"shareDialog-validationError hidden\">\n\t\t\t\t\t\t\t<span>предпросмотр</span><i class=\"icon-link-ext\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"shareDialog-previewLinkCell constrLink shareDialog-validationOk\">\n\t\t\t\t\t\t\t<a class=\"shareDialog-previewLink gmx-link\" href=\"{link}&edit=1\" target=\"_blank\">конструктор приложений</a><i class=\"gmx-icon icon-link-ext\"></i>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"shareDialog-row\">\n\t\t\t\t\t<textarea class=\"shareDialog-validationOk\" readonly=\"readonly\">&lt;iframe src=\"{link}\" width=\"{frameWidth}\" height=\"{frameHeight}\"&gt;&lt;/iframe&gt;</textarea>\n\t\t\t\t\t<div class=\"shareDialog-validationErrorView hidden\"><div class=\"alertWidget ui-widget\"></div></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"shareDialog-row\">\n\t\t\t\t\t<span class=\"shareDialog-previewLinkCell shareDialog-validationOk\">\n\t\t\t\t\t\t<a class=\"shareDialog-previewLink gmx-link\" href=\"//winnie.kosmosnimki.ru/2.0/iframePreview.html?width={frameWidth}&amp;height={frameHeight}&amp;url={link}\" target=\"_blank\">предпросмотр</a><i class=\"gmx-icon icon-link-ext\"></i>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n \n<script>\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tframeWidth: 800,\n\t\t\t\tframeHeight: 600,\n\t\t\t\tconf: 'R6UIY',\n\t\t\t\ttitle: ''\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tlink: ({ conf }) => '//winnie.kosmosnimki.ru/2.0/?config=' + conf,\n\t\t}\n\t}\n</script>\n\n<style>\n.share {\n    background-color: white;\n\tmargin-top: 6px;\n\tposition: absolute;\n\tz-index: 80;\n    left: 30px;\n    top: 40px;\n}\n.share {\n    padding: 1px;\n\tpadding-top: 0px;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-weight: normal;\n    text-align: left;\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    border-radius: 4px;\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    white-space: normal;\n    font-size: 11px;\n}\n.shareDialog-row {\n    padding-bottom: 8px;\n}\n.bold {\n    font-weight: bold;\n}\n.shareDialog-resolutionTable input {\n    width: 40px;\n\ttext-align: center;\n}\ntextarea.shareDialog-validationOk {\n    width: 96%;\n\theight: 66px;\n}\n\n.hidden {\n\tdisplay: none;\n}\n.shareDialog-previewLinkCell {\n    width: 50%;\n    text-align: right;\n\tfloat: right;\n}\n.constrLink {\n\tfloat: unset;\n    padding-left: 14px;\n}\n.shareDialog-previewLinkCell a {\n    color: #121212;\n}\n.shareDialog-inputPermalinkUrl {\n    width: 260px;\n}\n.shareDialog .shareDialog-inputEmbedCode {\n    height: 55px;\n    resize: none;\n    display: block;\n    font-family: monospace;\n}\n.share > .arrow:after {\n    border-width: 8px;\n    content: \"\";\n}\n.share > .arrow:after {\n    content: \" \";\n    top: 1px;\n    margin-left: -5px;\n    border-top-width: 0px;\n    border-bottom-color: #fff;\n}\n.share > .arrow, .share > .arrow:after {\n\tleft: 32%;\n    top: -5px;\n    position: relative;\n    display: block;\n    width: 0px;\n    height: 0px;\n    border-style: solid;\n}\n.gmx-link_icon {\n    float: right;\n\tcolor: grey;\n    font-size: 12px;\n\tmargin-top: 4px;\n}\n.shareDialog i {\n    font-size: 12px;\n}\n.icon-twitter:before {\n    content: '\\';\n}\n.icon-facebook:before {\n    content: '\\';\n}\n.icon-vk:before {\n    content: '\\';\n}\n.icon-link-ext:before {\n    content: '\\';\n}\n.popover-content {\n    padding: 6px 8px;\n}\n</style>\n",
    "<div class=\"TreeView\" on:click=\"chkEvent(event)\">\n\t<LineNode line={rawTree} parentProps={rawTree.content.properties} bind:layersTree bind:gmxTimeline />\n</div>\n \n\n<style>\n.TreeView {\n    position: absolute;\n\twidth: 358px;\n    overflow-y: scroll;\n\tbackground-color: white;\n}\n</style>\n\n<script>\n\timport LineNode from './LineNode.html';\n\tlet regs = {\n\t\tcmd: /cmd:(\\w+)/,\n\t\tid: /id:(\\w+)/\n\t}\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tconfig: {},\n\t\t\t\tlayersTree: {\n\t\t\t\t\tvisible: {},\n\t\t\t\t\texpanded: {}\n\t\t\t\t},\n\t\t\t\t//gmxTimeline: false,\n\t\t\t\tgroup: null,\n\t\t\t\trawTree: null\n\t\t\t}\n\t\t},\n\n\t\tmethods: {\n\t\t\tchkEvent(ev) {\n\t\t\t\tlet target = ev.target,\n\t\t\t\t\tclassName = target.className,\n\t\t\t\t\tarr = regs.cmd.exec(className);\n\n\t\t\t\tif (arr && arr.length === 2) {\n\t\t\t\t\tlet out = {\n\t\t\t\t\t\tcmd: arr[1],\n\t\t\t\t\t\ttype: ev.type,\n\t\t\t\t\t\toriginalEvent: ev\n\t\t\t\t\t};\n\t\t\t\t\tfor(let i = 0; i < 10; i++) {\n\t\t\t\t\t\tif (target.classList.contains('line')) {\n\t\t\t\t\t\t\tout.nodeType = target.classList.contains('layer') ? 'layer' : 'group';\n\t\t\t\t\t\t\tout.id = this._getId(target.className);\n\t\t\t\t\t\t\tout.target = target;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t\t}\n\t\t\t\t\tif (out.id) {\n\t\t\t\t\t\tthis.treeCommands(out);\n\t\t\t\t\t\tthis.fire('command', out);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_getId(className) {\n\t\t\t\tlet arr = regs.id.exec(className);\n\t\t\t\treturn arr && arr.length === 2 ? arr[1] : '';\n\t\t\t},\n\t\t\t_isExistVisible(node, layersTree) {\n\t\t\t\tlet cnt = 0,\n\t\t\t\t\tlen = node.children.length; \n\t\t\t\tfor(let i = 0; i < len; i++) {\n\t\t\t\t\tlet it = node.children[i],\n\t\t\t\t\t\tid = this._getId(it.className);\n\t\t\t\t\tif (layersTree.visible[id]) {\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn cnt === 0 ? 0 :\t\t// notVisibleLayers\n\t\t\t\t\t(cnt === len ? 1 :\t\t// allVisibleLayers\n\t\t\t\t\t0.5);\t\t\t\t\t// existsVisibleLayers\n\t\t\t},\n\n\t\t\t_toggleParents(node, visible, layersTree) {\n\t\t\t\tlet flag = true;\n\t\t\t\twhile(flag) {\n\t\t\t\t\tnode = node.parentNode\n\t\t\t\t\tif (node.classList.contains('line')) {\n\t\t\t\t\t\tlet id = this._getId(node.className);\n\t\t\t\t\t\tif (id) {\n\t\t\t\t\t\t\tlayersTree.visible[id] = visible;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (node.classList.contains('group')) {\n\t\t\t\t\t\tif (!visible && this._isExistVisible(node, layersTree)) {\n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t_uncheckRadio(node, id, layersTree) {\n\t\t\t\tfor(let i = 0, len = node.children.length; i < len; i++) {\n\t\t\t\t\tlet it = node.children[i],\n\t\t\t\t\t\tpid = this._getId(it.className);\n\t\t\t\t\tif (pid !== id) {\n\t\t\t\t\t\tthis.fire('command', { id: pid, set: false, cmd: 'toggleNode' });\n\t\t\t\t\t\t// layersTree.expanded[pid] = ph.set;\n\t\t\t\t\t\tlayersTree.visible[pid] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_iterateNodeChilds(node, visible, layersTree) {\n\t\t\t\tlet id = this._getId(node.className),\n\t\t\t\t\tisGroup = node.classList.contains('group'),\n\t\t\t\t\tul = node.getElementsByTagName('ul')[0];\n\n\t\t\t\tlayersTree.visible[id] = visible;\n\t\t\t\tif (isGroup) {\n\t\t\t\t\tlayersTree.expanded[id] = visible;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fire('command', { id: id, set: visible, cmd: 'toggleNode' });\n\t\t\t\t}\n\t\t\t\tif (ul) {\n\t\t\t\t\tlet isRadio = ul.classList.contains('radio'),\n\t\t\t\t\t\tflag = visible;\n\t\t\t\t\tfor(let i = 0, len = ul.children.length; i < len; i++) {\n\t\t\t\t\t\tlet it = ul.children[i],\n\t\t\t\t\t\t\tpid = this._getId(it.className);\n\t\t\t\t\t\tif (isRadio && i) { flag = false; }\n\t\t\t\t\t\tthis._iterateNodeChilds(it, flag, layersTree);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttreeCommands(attr) {\n\t\t\t\tlet {layersTree, rawTree} = this.get(),\n\t\t\t\t\tid = attr.id,\n\t\t\t\t\tisGroup = attr.nodeType === 'group',\n\t\t\t\t\t// expanded = attr.nodeType ? layersTree.expanded : layersTree.visible,\n\t\t\t\t\tisExpanded = !layersTree.expanded[id],\n\t\t\t\t\tisVisible = !layersTree.visible[id],\n\t\t\t\t\toptions = layersTree.options[id] || {},\n\t\t\t\t\tph = {\n\t\t\t\t\t\tcmd: 'toggleNode',\n\t\t\t\t\t\ttype: attr.type,\n\t\t\t\t\t\tnodeType: attr.nodeType,\n\t\t\t\t\t\toriginalEvent: attr.originalEvent\n\t\t\t\t\t};\n\n\t\t\t\t// console.log('treeCommands', attr.cmd, attr.nodeType);\n\n\t\t\t\tif (attr.cmd === 'clickOnExpander') {\n\t\t\t\t\tlayersTree.expanded[id] = !layersTree.expanded[id];\n\t\t\t\t\tthis.set({layersTree: layersTree});\n\t\t\t\t} else if (attr.cmd === 'toggleGroup') {\n\t\t\t\t\tthis._iterateNodeChilds(attr.target, isVisible, layersTree);\n\t\t\t\t\tthis._toggleParents(attr.target, isExpanded, layersTree);\n\n\t\t\t\t\tthis.set({layersTree: layersTree});\n\t\t\t\t} else if (attr.cmd === 'toggleVisibility') {\n\t\t\t\t\tlet node = attr.target,\n\t\t\t\t\t\tisGroup = node.getElementsByClassName('expanderInput')[0],\n\t\t\t\t\t\texpanded = isGroup ? layersTree.expanded : layersTree.visible,\n\t\t\t\t\t\tul = node.parentNode;\n\n\t\t\t\t\tif (expanded[id]) {\n\t\t\t\t\t\tdelete expanded[id];\n\t\t\t\t\t} else {\n\t\t\t\t\t\texpanded[id] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (ul && ul.classList.contains('radio')) {\n\t\t\t\t\t\tthis._uncheckRadio(ul, id, layersTree);\n\t\t\t\t\t}\n\t\t\t\t\tthis._toggleParents(attr.target, expanded[id], layersTree);\n\t\t\t\t\tthis.set({layersTree: layersTree});\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\tappendNode(id) {\n\t\t\t\tthis.options.appendNode(id);\n\t\t\t}\n\t\t},\n\t\tcomponents: {\n\t\t\tLineNode\n\t\t}\n\t}\n\n</script>\n",
    "{#if !isSkiped}\n\n<li class=\"line cmd:toggleIcons id:{nodeID} {line.type}\" ref:line>\n<div class=\"mega\">\n{#if properties}\n {#if line.type !== 'map'}\n\t{#if line.type === 'group'}\n\t<input class=\"expander expanderInput hidden\" type=\"checkbox\" checked=\"{isOpened}\" ref:expander />\n\t<span class=\"expander pointer expanderCont cmd:clickOnExpander\" on:click=\"clickOnExpander(this)\"></span>\n\t{/if}\n\t\t{#if line.type === 'layer'} <!-- begin: line.type === 'layer' -->\n\t\t\t{#if properties.styles.length > 1}\n\t<span class=\"cont-overlays\"><svg role=\"img\" class=\"svgIcon\"><use xlink:href=\"#overlays\" href=\"#overlays\"></use></svg></span>\n\t\t\t{/if}\n\t<span class=\"icons \">\n\n\t\t{#if gmxTimeline && properties.Temporal && (properties.IsRasterCatalog || (properties.Quicklook && properties.Quicklook !== 'null'))}\n\t\t<span class=\"pointer cmd:toggleTimeline cont-timeline disabled\" title={isEng ? 'Add to timeline' : 'Добавить на таймлайн'} on:click=\"toggleTimeline(this)\"></span>\n\t\t{/if}\n\t\t\n\t\t{#if isInfo}\n\t\t<span class=\"pointer cmd:showInfo cont-info\" title={isEng ? 'Layer info' : 'Метаданные слоя'}></span>\n\t\t{/if}\n \t\t<span class=\"pointer cmd:fitBounds cont-center\"  title={isEng ? 'Position' : 'Позиционировать'}></span>\n\t\t\t\n\t\t\n\t</span>\n\t\t{/if} <!-- end: line.type === 'layer' -->\n {/if}\n {#if line.type !== 'map'}\n\t<span class=\"cont\">\n\t\t{#if line.type === 'group'}\n\t\t\t{#if properties.ShowCheckbox}\n\t\t\t\t<input class=\"check visibility pointer cmd:toggleGroup {line.type} id:{nodeID}\" name=\"{checkboxName}\" type=\"{checkboxType}\" checked=\"{isGroupVisible}\" />\n\t\t\t{/if}\n\t\t{:else}\n\t\t\t<input class=\"check visibility pointer cmd:toggleVisibility {line.type} id:{nodeID}\" name=\"{checkboxName}\" type=\"{checkboxType}\" checked=\"{isVisible}\" />\n\t\t{/if}\n\t\t{#if line.type === 'layer' && styles.length && styles.length < 2 && styles[0].RenderStyle}\n\t\t\t<LegendIconCell item={styles[0]} type={properties.GeometryType} />\n\t\t{/if}\n\t\t<label class=\"pointer title \n\t\t\t{!isGroup ? ' cmd:toggleVisibility' : (isShowCheckbox ? ' cmd:toggleGroup' : '')}\n\t\t\t{multiStyles}\n\t\t\t\"\n\t\t\ton:click=\"clickOnExpander(this)\"\n\t\t\t>{nameToEng}</label>\n\t\t<div class=\"description {properties.description ? '' : 'collapse'}\">{@html properties.description || ''}</div>\n\t\t{#if line.type === 'layer'}\n\t\t\t{#if styles.length && styles.length > 1 && styles[0].RenderStyle}\n\t\t\t<div class=\"legend\">\n\t\t\t\t<div class=\"legend-cont\">\n\t\t\t\t{#each styles as it}\n\t\t\t\t\t<div class=\"gmx-style-legend\">\n\t\t\t\t\t\t<span class=\"legendIconEye enabled pointer cmd:toggleStyle\"></span>\n\t\t\t\t\t\t<LegendIconCell item={it} type={properties.GeometryType} />\n\t\t\t\t\t\t<span class=\"styleName\">{it.Name}</span>\n\t\t\t\t\t</div>\n\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/if}\n\t\t{/if}\n\t</span>\n  {/if}\n{/if}\n</div>\n\n{#if line.content.children}\n\t<ul class=\"group css-treeview id_{nodeID} {isOpened || isRoot ? '' : 'collapse'} {isRadio}\" ref:ul>\n\t{#each line.content.children || [] as child}\n\t\t<svelte:self line={child} parentProps={line.content.properties} bind:layersTree bind:gmxTimeline />\n\t{/each}\n\t</ul>\n{/if}\n</li> \n{/if}\n\n<script>\n\n\timport LegendIconCell from './LegendIconCell.html';\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\t//gmxTimeline: false,\n\t\t\t\tline: null\n\t\t\t}\n\t\t},\n\t\t// helpers: {\n\t\t// },\n\t\tcomputed: {\n\t\t\tcheckboxType: ({ parentProps }) => parentProps && parentProps.list ? 'radio' : 'checkbox',\n\t\t\tcheckboxName: ({ parentProps }) => parentProps && parentProps.GroupID || '',\n\t\t\tproperties: ({ line }) => line.content.properties,\n\t\t\tisGroup: ({ line }) => line.type === 'group',\n\t\t\tisShowCheckbox: ({ properties }) => properties.ShowCheckbox,\n\t\t\tisInfo: ({ properties }) => properties.MetaProperties && Object.keys(properties.MetaProperties).length,\n\t\t\tisRadio: ({ properties }) => properties.list ? 'radio' : 'checkbox',\n\t\t\tnodeID: ({ properties }) => properties ? properties.name || properties.GroupID : 'root',\n\t\t\tstyles: ({ properties }) => properties.gmxStyles ? properties.gmxStyles.styles : [],\n\t\t\tmultiStyles: ({ properties }) => properties.gmxStyles && properties.gmxStyles.styles.length > 1 ? 'multiStyles' : '',\n\t\t\tisRoot: ({ properties }) => properties.MapID,\n\t\t\tisOpened: ({line, layersTree}) => {\n\t\t\t\tlet content = line.content,\n\t\t\t\t\tprops = content.properties,\n\t\t\t\t\tnodeID = props.GroupID || 'root';\n\t\t\t\treturn layersTree.expanded[nodeID];\n\t\t\t},\n\t\t\tisGroupVisible: ({line, layersTree}) => {\n\t\t\t\tlet content = line.content,\n\t\t\t\t\tprops = content.properties,\n\t\t\t\t\tnodeID = props.GroupID || 'root';\n\t\t\t\treturn layersTree.visible[nodeID];\n\t\t\t},\n\t\t\tisVisible: ({line, layersTree}) => {\n\t\t\t\treturn layersTree.visible[line.content.properties.name];\n\t\t\t},\n\t\t\tisSkiped: ({line, layersTree}) => {\n\t\t\t\treturn layersTree.skiped[line.content.properties.name];\n\t\t\t},\n\t\t\tnameToEng: ({ properties }) => { let title = properties.title; return window.language === 'eng' ? title.replace('СКАНЭКС (Россия)', 'SCANEX (Russia)').replace('Пожары', 'Fires') : title; },\n\t\t\tisEng: ({line}) => {\n\t\t\t\treturn window.language === 'eng';\n\t\t\t}\n\t\t},\n\t\tcomponents: {\n\t\t\tLegendIconCell\n\t\t},\n\t\tmethods: {\n\t\t\tclickOnExpander(target) {\n\t\t\t\tlet {line} = this.get();\n\t\t\t\t\n\t\t\t\tif (line.type === 'group' && !line.content.properties.ShowCheckbox) {\n\t\t\t\t\tlet node = this.refs.ul;\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tlet isCollapse = node.classList.contains('collapse'),\n\t\t\t\t\t\t\texpander = this.refs.expander;\n\t\t\t\t\t\tif (isCollapse) {\n\t\t\t\t\t\t\tnode.classList.remove('collapse');\n\t\t\t\t\t\t\texpander.checked = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.classList.add('collapse');\n\t\t\t\t\t\t\texpander.checked = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\ttoggleTimeline(node) {\n\t\t\t\tif (node) {\n\t\t\t\t\tif (node.classList.contains('disabled')) {\n\t\t\t\t\t\tnode.classList.remove('disabled');\n\t\t\t\t\t\tnode.classList.add('enabled');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.classList.add('disabled');\n\t\t\t\t\t\tnode.classList.remove('enabled');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tshowInfo(target) {\n\t\t\t\tlet node = target.parentNode.nextElementSibling.getElementsByClassName('description')[0];\n\t\t\t\tif (node) {\n\t\t\t\t\tif (node.classList.contains('collapse')) {\n\t\t\t\t\t\tlet {line} = this.get();\n\t\t\t\t\t\tnode.innerHTML = line.content.properties.description || '';\n\t\t\t\t\t\tnode.classList.remove('collapse');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.classList.add('collapse');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n\n<style>\n\nul {\n\tpadding-inline-start: 12px;\n}\nli {\n\tlist-style: none;\n    text-overflow: ellipsis;\n    white-space: initial;\n    overflow-x: inherit;\n\twidth: 100%;\n}\nli.line > .icons span.cont-center {\n\tvisibility: visible;\n}\nli.line:hover > .icons span.cont-center {\n\tvisibility: visible;\n}\nli.line:hover > .cont label.title {\n\tfont-weight: normal;\n}\n\nsvg {\n\tpointer-events: none;\n}\n\nsvg {\n    height: 14px;\n    width: 14px;\n}\n.timeline {\n    position: absolute;\n    top: -3px;\n    left: 2px;\n}\n.timeline.disabled {\n\tfill: #999999;\n}\n.timeline.enabled {\n\tfill: #45B0D8;\n}\n\n.pointer {\n    cursor: pointer;\n}\n.expanderInput {\n\tdisplay: initial;\n\tposition: relative;\n\tright: 17px;\n\ttop: 0;\n}\n.expanderCont {\n    position: relative;\n\ttop: -5px;\n}\n.legend {\n\tpadding-left: 20px;\n    display: none;\n}\n.legend-cont {\n\tfloat: left;\n\tbackground: #FFF;\n    top: 3px;\n\n}\n\ninput.check.visibility:checked ~ .legend {\n    display: block;\n\tclear: both;\n}\n.gmx-style-legend .legendIconCell.style {\n    top: 0px;\n    position: relative;\n}\n.gmx-style-legend .legendIconCell {\n    width: 100%;\n}\n.legendIconEye {\n\tdisplay: inline-block;\n}\n.legendIconEye > .off {\n    position: relative;\n}\n.legendIconEye.enabled > .on, .legendIconEye > .off {\n    display: inline-block;\n}\n.legendIconEye > .on, .legendIconEye.enabled > .off {\n    display: none;\n}\n\n:global(.collapse) {\n    display: none;\n}\n\nspan.cont-overlays {\n    position: relative;\n    left: 26px;\n    padding-top: 2px;\n}\nspan.icons {\n\tz-index: 1;\n    right: 8px;\n    position: relative;\n    /*position: absolute;*/\n}\n.hidden {\n    visibility: hidden;\n}\n\n.styleName {\n    position: relative;\n    bottom: 4px;\n    z-index: 2;\n    font-size: 12px;\n\n}\n\n\n</style>\n",
    "<span class=\"legendIconCell style\">\n{#if item.RenderStyle.iconUrl}\n\t<img src=\"{item.RenderStyle.iconUrl}\" crossorigin=\"\" alt=\"Style Icon\" />\n{:elseif fillPattern}\n\t<img src=\"{fillPattern}\" alt=\"Style Icon\" class=\"fillPattern\" />\n{:else}\n\t<span class=\"{type} legendIconStyle \" style=\"background-color: {backgroundColor}; border-color: {borderColor};\"></span>\n{/if}\n</span>\n \n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tfillPattern: ({ item }) => {\n\t\t\t\tlet st = L.extend({}, item.RenderStyle, {fillOpacity: 1}),\n\t\t\t\t\tfillPattern = L.gmxUtil.getPatternIcon(null, st);\n\t\t\t\treturn fillPattern ? fillPattern.canvas.toDataURL() : null;\n\t\t\t},\n\t\t\tbackgroundColor: ({ item }) => L.gmxUtil.dec2rgba(item.RenderStyle.fillColor, item.RenderStyle.fillOpacity || 1),\n\t\t\tborderColor: ({ item }) => L.gmxUtil.dec2rgba(item.RenderStyle.color, item.RenderStyle.opacity || 1)\n\t\t},\n\n\t\tonstate({ changed, current, previous }) {\n // console.log('LegendIconCell in onstate', changed, current, previous);\n\t\t}\n\t}\n</script>\n\n\n<style>\n.legendIconCell {\n    /*\n\tleft: -8px;\n    position: relative;\n\t*/\n}\n.legendIconCell img {\n    height: 13px;\n}\n.legendIconCell .polygon {\n    display: inline-block;\n}\n\n.legendIconCell .linestring {\n    border-bottom: unset;\n    border-top: unset;\n    border-right: unset;\n\tborder-radius: unset;\n    border-width: 2px;\n}\n.legendIconCell .point {\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    /*top: -4px;*/\n}\n.legendIconCell span {\n    width: 10px;\n    height: 10px;\n    border: solid;\n    border-width: 1px;\n\t/*display: inline-block;*/\n    /*position: relative;*/\n    /*top: -2px;*/\n    margin-right: 2px;\n    margin-bottom:2px;\n}\n\n.check.visibility.pointer {\ndisplay: inline-flex;\n}\n\n\n\n\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}